CREATE TABLE IF NOT EXISTS ingredients(
	ID int PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(32) NOT NULL,
	amount int NOT NULL,
	measurement VARCHAR(8) NOT NULL,
	recipe_id int NOT NULL,

	FOREIGN KEY(recipe_id) REFERENCES recipes(ID) ON DELETE CASCADE
);

<?php
function ValidIngredients($ingredients)
{
  $ingredient_count = count($ingredients);
  if($ingredient_count < 1)
	return false;

  for($i = 0; $i < $ingredient_count; ++$i)
    if(!(isset($ingredients[i]["name"]) && gettype($ingredients[i]["name"]) === "string" && 
	     isset($ingredients[i]["measurement"]) && gettype($ingredients[i]["measurement"]) === "string" &&
	     isset($ingredients[i]["amount"]) && gettype($ingredients[i]["amount"]) === "integer" && $ingredients[i]["amount"] > 0))
      return false;

  return true;
}

// this assumes $ingredients have already been validated
function BuildIngredientQuery($recipe_id, $ingredients)
{
	$output = [
		"query" => "INSERT INTO ingredients(name, amount, measurement, recipe_id) VALUES ",
		"param_types" => "",
		"param_list" => []
	];

	$ingredient_count = count($ingredients);

	$output["param_types"] = str_repeat("sdsi", $ingredient_count);
	$output["query"] += rtrim(str_repeat("(?, ?, ?, ?),", $ingredient_count), ",");

  	for($i = 0; $i < $ingredient_count; ++$i)
	{
		$output["param_list"][] = $ingredients[$i]["name"];
		$output["param_list"][] = $ingredients[$i]["amount"];
		$output["param_list"][] = $ingredients[$i]["measurement"];
		$output["param_list"][] = $recipe_id;
	}
}

public function UploadIngredients($recipe_id, $ingredients)
{
	$ingredient_query_data = BuildIngredientQuery($recipe_id, $ingredients);

	$stmt = $this->DB->prepare($ingredient_query_data["query"]);

	$stmt->bind_param($ingredient_query_data["param_types"], ...$ingredient_query_data["param_list"]);
	$stmt->execute();
}

public function GetTopRecipe()
{
	$this->DB->query("SELECT MAX(ID) FROM recipes");

	return $this->DB->fetch_array(MYSQLI_NUM)[0];
}

public function CreateRecipe($title, $description, $image_url, $ingredients, $owner_user_identifier)
{
	$stmt = $this->DB->prepare("INSERT INTO recipes(title, description, image_url, owner)
	                            SELECT ?, ?, ?, ID AS owner FROM users WHERE identifier=?");			
	
	
	$stmt->bind_param("sssss", $title, $description, $image_url, $owner_user_identifier);
	$stmt->execute();

	UploadIngredients($this->GetTopRecipe(), $ingredients);
}

public function ClearIngredients($recipe_id)
{
	$stmt = $this->DB->prepare("DELETE FROM ingredients WHERE recipe_id=?");			
		
	$stmt->bind_param("i", $recipe_id);
	$stmt->execute();
}
?>
